create table item_mast(PRO_ID int, PRO_NAME varchar(255), PRO_PRICE int, PRO_COM int);


INSERT INTO item_mast(PRO_ID , PRO_NAME , PRO_PRICE , PRO_COM) VALUES (101, "Mother Board",3200, 15),
								      (102, "Key Board",450, 16),
								      (103, "ZIP drive", 250, 14),
								      (104, "Monitor", 550, 16),
								      (105, "DVD drive",5000, 11),
								      (106, "CD drive",900, 12),
								      (107, "Printer",800, 12),
								      (108, "Refill cartridge",2600, 13),
								      (109, "Speaker",350, 13),
								      (110, "Mouse",250, 12);
									 	

Syntax = select * from item_mast;
+--------+------------------+-----------+---------+
| PRO_ID | PRO_NAME         | PRO_PRICE | PRO_COM |
+--------+------------------+-----------+---------+
|    101 | Mother Board     |      3200 |      15 |
|    102 | Key Board        |       450 |      16 |
|    103 | ZIP drive        |       250 |      14 |
|    104 | Monitor          |       550 |      16 |
|    105 | DVD drive        |      5000 |      11 |
|    106 | CD drive         |       900 |      12 |
|    107 | Printer          |       800 |      12 |
|    108 | Refill cartridge |      2600 |      13 |
|    109 | Speaker          |       350 |      13 |
|    110 | Mouse            |       250 |      12 |
+--------+------------------+-----------+---------+
10 rows in set (0.00 sec)
____________________________________________________________________________________________________________________________

16) Write a SQL query to find all the products with a price between Rs.200 and Rs.600?

Syntax = SELECT * FROM item_mast WHERE pro_price BETWEEN 200 AND 600;

+--------+-----------+-----------+---------+
| PRO_ID | PRO_NAME  | PRO_PRICE | PRO_COM |
+--------+-----------+-----------+---------+
|    102 | Key Board |       450 |      16 |
|    103 | ZIP drive |       250 |      14 |
|    104 | Monitor   |       550 |      16 |
|    109 | Speaker   |       350 |      13 |
|    110 | Mouse     |       250 |      12 |
+--------+-----------+-----------+---------+
5 rows in set (0.00 sec)

************************The SQL BETWEEN Operator************************************************************
The BETWEEN operator selects values within a given range.
The values can be numbers, text, or dates.
The BETWEEN operator is inclusive: begin and end values are included.

************************BETWEEN Syntax***********************************************************************
SELECT column_name(s) FROM table_name WHERE column_name BETWEEN value1 AND value2;
SELECT * FROM Products WHERE Price BETWEEN 10 AND 20;

NOT BETWEEN Example To display the products outside the range of the previous example, use NOT BETWEEN:

SELECT * FROM Products WHERE Price NOT BETWEEN 10 AND 20;

************************BETWEEN with IN Example***************************************************************

The following SQL statement selects all products with a price BETWEEN 10 and 20.

In addition; do not show products with a CategoryID of 1,2, or 3:

SELECT * FROM Products WHERE (Price BETWEEN 10 AND 20) AND NOT CategoryID IN (1,2,3);

************************BETWEEN Text Values Example************************************************************

The following SQL statement selects all products with a ProductName BETWEEN Carnarvon Tigers and Mozzarella di Giovanni:

SELECT * FROM Products WHERE ProductName BETWEEN 'Carnarvon Tigers' AND 'Mozzarella di Giovanni' ORDER BY ProductName;
SELECT * FROM Products WHERE ProductName BETWEEN "Carnarvon Tigers" AND "Chef Anton's Cajun Seasoning" ORDER BY ProductName;

***************************NOT BETWEEN Text Values Example******************************************************

The following SQL statement selects all products with a ProductName NOT BETWEEN Carnarvon Tigers and Mozzarella di Giovanni:

Example SELECT * FROM Products WHERE ProductName NOT BETWEEN 'Carnarvon Tigers' AND 'Mozzarella di Giovanni' ORDER BY ProductName;

_______________________________________________________________________________________________________________________________________

18) Write a SQL query to display the average price of the items for each company, showing only the company code?

Syntax : -SELECT AVG(pro_price), pro_com FROM item_mast GROUP BY pro_com;

Output : -
+----------------+---------+
| avg(pro_price) | pro_com |
+----------------+---------+
|      3200.0000 |      15 |
|       500.0000 |      16 |
|       250.0000 |      14 |
|      5000.0000 |      11 |
|       650.0000 |      12 |
|      1475.0000 |      13 |
+----------------+---------+
6 rows in set (0.06 sec)

Tutorial on Sql Aggregation Function
SQL aggregate functions return a single value, calculated from values in a column.

AVG () – This functions returns the average value
SELECT AVG(column_name) FROM table_name

COUNT () – This functions returns the number of rows
SELECT COUNT(column_name) FROM table_name

MAX () – This functions returns the largest value
SELECT MAX(column_name) FROM table_name;

MIN () – This functions returns the smallest value
SELECT MIN(column_name) FROM table_name;

ROUND () – This functions rounds a numeric field to the number of decimals specified
SELECT ROUND(column_name,decimals) FROM table_name;

SUM () – This functions returns the sum
SELECT SUM(column_name) FROM table_name;

_________________________________________________________________________________________________________________________









